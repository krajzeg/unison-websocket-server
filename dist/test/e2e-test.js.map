{"version":3,"sources":["e2e-test.js"],"names":[],"mappings":"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","file":"e2e-test.js","sourcesContent":["// This end to end test sets up a websocket server,\r\n// connects with simulated clients and checks whether the results are correct.\r\n\r\nlet assert = require('chai').assert;\r\nlet Promise = require('bluebird');\r\nlet ws = require('ws');\r\nlet UnisonWsServer = require('../lib');\r\n\r\nconst PORT = 13515;\r\n\r\ndescribe(\"Unison websocket server\", () => {\r\n\r\n  it(\"should report connecting clients via the onAttach callback\", (done) => {\r\n    withTestServer((server) => {\r\n      let clients = [];\r\n      server.onAttach((clientId) => clients.push(clientId));\r\n\r\n      return withTestClient((ws1) => {\r\n        return withTestClient((ws2) => {\r\n          assert.deepEqual(clients, [\"client#1\", \"client#2\"]);\r\n        });\r\n      });\r\n    }).then(done).catch(done);\r\n  });\r\n\r\n  it(\"should report messages from clients through the onReceive callback\", (done) => {\r\n    let receivedMessages = [];\r\n\r\n    withTestServer((server) => {\r\n      server.onReceive((client, msg) => receivedMessages.push({client, msg}));\r\n      return withTestClient((ws1) => {\r\n        return sendTestMessage(ws1, \"Hello!\")\r\n          .then(() => {\r\n            assert.deepEqual(receivedMessages, [\r\n              {client: \"client#1\", msg: \"Hello!\"}\r\n            ]);\r\n          });\r\n      });\r\n    }).then(done).catch(done);\r\n  });\r\n\r\n  it(\"should allow sending messages to clients with sendTo\", (done) => {\r\n    withTestServer((server) => {\r\n      return withTestClient((ws1) => {\r\n        let messagesOnClient = [];\r\n        ws1.on('message', (msg) => messagesOnClient.push(msg));\r\n\r\n        return server.sendTo('client#1', \"Hi!\").then(() => {\r\n          return wait(100);\r\n        }).then(() => {\r\n          assert.deepEqual(messagesOnClient, [\"Hi!\"]);\r\n        });\r\n      });\r\n    }).then(done).catch(done);\r\n  });\r\n\r\n  it(\"should report disconnecting clients via the onDetach callback\", (done) => {\r\n    withTestServer((server) => {\r\n      let detachedClients = [];\r\n      server.onDetach((client) => detachedClients.push(client));\r\n\r\n      return withTestClient(() => {})\r\n        .then(() => {\r\n          // at this point the client has disconnected\r\n          return wait(100);\r\n        }).then(() => {\r\n          assert.deepEqual(detachedClients, [\"client#1\"]);\r\n        });\r\n    }).then(done).catch(done);\r\n  });\r\n});\r\n\r\n\r\n\r\nfunction withTestServer(testBody) {\r\n  let wsServer;\r\n  return new Promise((resolve, reject) => {\r\n    wsServer = new ws.Server({port: PORT}, (err) => {\r\n      if (err) return reject(err);\r\n      resolve(wsServer);\r\n    });\r\n  }).then((wsServer) => {\r\n    return new UnisonWsServer(wsServer);\r\n  }).then((unisonServer) => {\r\n    return testBody(unisonServer);\r\n  }).finally(() => {\r\n    wsServer.close();\r\n  });\r\n}\r\n\r\nfunction withTestClient(testBody) {\r\n  let socket;\r\n  return new Promise((resolve, reject) => {\r\n    socket = new ws(`ws://localhost:${PORT}`);\r\n    socket.on('open', () => resolve(socket));\r\n    socket.on('error', reject);\r\n  }).then((socket) => {\r\n    return testBody(socket);\r\n  }).finally(() => {\r\n    if (socket) socket.close();\r\n    return wait(500); // give some time to actually close the server\r\n  });\r\n}\r\n\r\nfunction sendTestMessage(socket, msg) {\r\n  return Promise.promisify(socket.send.bind(socket))(msg)\r\n    .then(() => {\r\n      return wait(200); // give the message some time to arrive\r\n    });\r\n}\r\n\r\nfunction wait(ms) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}"],"sourceRoot":"..\\..\\test"}